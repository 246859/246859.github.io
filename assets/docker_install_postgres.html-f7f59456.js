import{_ as p,W as o,X as t,Y as l,Z as s,$ as a,a0 as e,a1 as r,C as c}from"./framework-a4c02b8f.js";const i={},u=s("h1",{id:"docker上安装postgresql",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#docker上安装postgresql","aria-hidden":"true"},"#"),a(" Docker上安装PostgreSql")],-1),d=s("figure",null,[s("img",{src:"https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202310111522417.png",alt:"",tabindex:"0",loading:"lazy"}),s("figcaption")],-1),k=s("hr",null,null,-1),b={href:"https://www.postgresql.org/",target:"_blank",rel:"noopener noreferrer"},m=s("p",null,[a("关系型数据库的话以前只学习过mysql一种，最近打算来捣鼓一下大名鼎鼎的postgresql，官网的标题就是"),s("strong",null,"世界上最先进的关系型数据库"),a("。为了方便学习，采用本地虚拟机+docker的方式进行安装。")],-1),v=s("h3",{id:"镜像",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#镜像","aria-hidden":"true"},"#"),a(" 镜像")],-1),g={href:"https://hub.docker.com/_/postgres",target:"_blank",rel:"noopener noreferrer"},h=r(`<img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202310111516192.png" alt="" style="zoom:50%;"><p>一看postgresql的维护版本这么多，不知道选什么就选最稳的<code>11</code>。</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>16版本的话navicat还不太兼容</p></div><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>root@k8s<span class="token operator">-</span>n1<span class="token punctuation">:</span><span class="token operator">/</span>home<span class="token operator">/</span>wyh<span class="token operator">/</span>db<span class="token operator">/</span>postgres# docker pull postgres<span class="token punctuation">:</span><span class="token number">11</span><span class="token operator">-</span>alpine
<span class="token number">11</span><span class="token operator">-</span>alpine<span class="token punctuation">:</span> Pulling from library<span class="token operator">/</span>postgres
96526aa774ef<span class="token punctuation">:</span> Pull complete 
af5bdf29647f<span class="token punctuation">:</span> Pull complete 
bd073dcbedbd<span class="token punctuation">:</span> Pull complete 
edb6d1e27748<span class="token punctuation">:</span> Pull complete 
aaa33f598b71<span class="token punctuation">:</span> Pull complete 
04d1e72543e2<span class="token punctuation">:</span> Pull complete 
b496b48df204<span class="token punctuation">:</span> Pull complete 
8364467ecffa<span class="token punctuation">:</span> Pull complete 
Digest<span class="token punctuation">:</span> sha256<span class="token punctuation">:</span>d07f0ca3a41267f5bc14c65f6aadaae5cadc2912e5f3203b9b6f524f28869aaf
Status<span class="token punctuation">:</span> Downloaded newer image <span class="token keyword">for</span> postgres<span class="token punctuation">:</span><span class="token number">11</span><span class="token operator">-</span>alpine
docker<span class="token punctuation">.</span>io<span class="token operator">/</span>library<span class="token operator">/</span>postgres<span class="token punctuation">:</span><span class="token number">11</span><span class="token operator">-</span>alpine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看下镜像</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>root@k8s<span class="token operator">-</span>n1<span class="token punctuation">:</span><span class="token operator">/</span>home<span class="token operator">/</span>wyh<span class="token operator">/</span>db<span class="token operator">/</span>postgres# docker images
REPOSITORY   TAG         IMAGE ID       CREATED        SIZE
postgres     <span class="token number">11</span><span class="token operator">-</span>alpine   a05886c0c182   <span class="token number">6</span> days ago     228MB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="容器" tabindex="-1"><a class="header-anchor" href="#容器" aria-hidden="true">#</a> 容器</h3><p>运行如下命令创建容i去</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">5432</span>:5432<span class="token punctuation">\\</span>
	<span class="token parameter variable">-v</span> /home/wyh/db/postgres/data:/var/lib/postgresql/data<span class="token punctuation">\\</span>
    <span class="token parameter variable">-e</span> <span class="token assign-left variable">POSTGRES_PASSWORD</span><span class="token operator">=</span><span class="token number">123456</span><span class="token punctuation">\\</span>
    <span class="token parameter variable">-e</span> <span class="token assign-left variable"><span class="token environment constant">LANG</span></span><span class="token operator">=</span>C.UTF-8<span class="token punctuation">\\</span>
    <span class="token parameter variable">--restart</span><span class="token operator">=</span>always<span class="token punctuation">\\</span>
    <span class="token parameter variable">--name</span> postg11<span class="token punctuation">\\</span>
    <span class="token parameter variable">-d</span> postgres:11-alpine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>POSTGRES_PASSWORD</code>，环境变量，设置超级用户默认密码</li><li><code>LANG</code>，环境变量，设置字符集</li></ul><p>跑起来看看看日志</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@k8s-n1:/home/wyh/db/postgres<span class="token comment"># docker logs postg16</span>

PostgreSQL Database directory appears to contain a database<span class="token punctuation">;</span> Skipping initialization

<span class="token number">2023</span>-10-11 08:00:26.738 UTC <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> LOG:  starting PostgreSQL <span class="token number">16.0</span> <span class="token punctuation">(</span>Debian <span class="token number">16.0</span>-1.pgdg120+1<span class="token punctuation">)</span> on x86_64-pc-linux-gnu, compiled by gcc <span class="token punctuation">(</span>Debian <span class="token number">12.2</span>.0-14<span class="token punctuation">)</span> <span class="token number">12.2</span>.0, <span class="token number">64</span>-bit
<span class="token number">2023</span>-10-11 08:00:26.738 UTC <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> LOG:  listening on IPv4 address <span class="token string">&quot;0.0.0.0&quot;</span>, port <span class="token number">5432</span>
<span class="token number">2023</span>-10-11 08:00:26.738 UTC <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> LOG:  listening on IPv6 address <span class="token string">&quot;::&quot;</span>, port <span class="token number">5432</span>
<span class="token number">2023</span>-10-11 08:00:26.741 UTC <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> LOG:  listening on Unix socket <span class="token string">&quot;/var/run/postgresql/.s.PGSQL.5432&quot;</span>
<span class="token number">2023</span>-10-11 08:00:26.745 UTC <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span> LOG:  database system was interrupted<span class="token punctuation">;</span> last known up at <span class="token number">2023</span>-10-11 07:59:14 UTC
<span class="token number">2023</span>-10-11 08:00:26.756 UTC <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span> LOG:  database system was not properly shut down<span class="token punctuation">;</span> automatic recovery <span class="token keyword">in</span> progress
<span class="token number">2023</span>-10-11 08:00:26.760 UTC <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span> LOG:  redo starts at <span class="token number">0</span>/152BEE8
<span class="token number">2023</span>-10-11 08:00:26.761 UTC <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span> LOG:  invalid record length at <span class="token number">0</span>/152BF20: expected at least <span class="token number">24</span>, got <span class="token number">0</span>
<span class="token number">2023</span>-10-11 08:00:26.761 UTC <span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span> LOG:  redo <span class="token keyword">done</span> at <span class="token number">0</span>/152BEE8 system usage: CPU: user: <span class="token number">0.00</span> s, system: <span class="token number">0.00</span> s, elapsed: <span class="token number">0.00</span> s
<span class="token number">2023</span>-10-11 08:00:26.763 UTC <span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> LOG:  checkpoint starting: end-of-recovery immediate <span class="token function">wait</span>
<span class="token number">2023</span>-10-11 08:00:26.767 UTC <span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> LOG:  checkpoint complete: wrote <span class="token number">3</span> buffers <span class="token punctuation">(</span><span class="token number">0.0</span>%<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token number">0</span> WAL file<span class="token punctuation">(</span>s<span class="token punctuation">)</span> added, <span class="token number">0</span> removed, <span class="token number">0</span> recycled<span class="token punctuation">;</span> <span class="token assign-left variable">write</span><span class="token operator">=</span><span class="token number">0.001</span> s, <span class="token assign-left variable">sync</span><span class="token operator">=</span><span class="token number">0.001</span> s, <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token number">0.005</span> s<span class="token punctuation">;</span> <span class="token function">sync</span> <span class="token assign-left variable">files</span><span class="token operator">=</span><span class="token number">2</span>, <span class="token assign-left variable">longest</span><span class="token operator">=</span><span class="token number">0.001</span> s, <span class="token assign-left variable">average</span><span class="token operator">=</span><span class="token number">0.001</span> s<span class="token punctuation">;</span> <span class="token assign-left variable">distance</span><span class="token operator">=</span><span class="token number">0</span> kB, <span class="token assign-left variable">estimate</span><span class="token operator">=</span><span class="token number">0</span> kB<span class="token punctuation">;</span> <span class="token assign-left variable">lsn</span><span class="token operator">=</span><span class="token number">0</span>/152BF20, redo <span class="token assign-left variable">lsn</span><span class="token operator">=</span><span class="token number">0</span>/152BF20
<span class="token number">2023</span>-10-11 08:00:26.770 UTC <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> LOG:  database system is ready to accept connections
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再看看ps</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>root@k8s-n1:/home/wyh/db/postgres<span class="token comment"># docker ps</span>
CONTAINER ID   IMAGE             COMMAND                   CREATED          STATUS             PORTS                                                  NAMES
cab7fbfe1ba4   postgres:latest   <span class="token string">&quot;docker-entrypoint.s…&quot;</span>   <span class="token number">54</span> seconds ago   Up <span class="token number">54</span> seconds      <span class="token number">0.0</span>.0.0:5432-<span class="token operator">&gt;</span><span class="token number">5432</span>/tcp, :::5432-<span class="token operator">&gt;</span><span class="token number">5432</span>/tcp              postg16
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命令行" tabindex="-1"><a class="header-anchor" href="#命令行" aria-hidden="true">#</a> 命令行</h3><p>容器成功运行以后，到数据库命令行里面看看，默认的超级用户名为<code>postgres</code>。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> postg16 pgql <span class="token parameter variable">-U</span> postgres <span class="token parameter variable">-W</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>pg的命令行有独特的命令，不像<code>mysql</code>全是SQL语句，一般以下划线<code>\\</code>开头，<code>\\?</code>查看帮助命令。查看所有的数据库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>postgres-<span class="token comment"># \\l</span>
                                                      List of databases
   Name    <span class="token operator">|</span>  Owner   <span class="token operator">|</span> Encoding <span class="token operator">|</span> Locale Provider <span class="token operator">|</span>  Collate   <span class="token operator">|</span>   Ctype    <span class="token operator">|</span> ICU Locale <span class="token operator">|</span> ICU Rules <span class="token operator">|</span>   Access privileges   
-----------+----------+----------+-----------------+------------+------------+------------+-----------+-----------------------
 postgres  <span class="token operator">|</span> postgres <span class="token operator">|</span> UTF8     <span class="token operator">|</span> libc            <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span>            <span class="token operator">|</span>           <span class="token operator">|</span> 
 template0 <span class="token operator">|</span> postgres <span class="token operator">|</span> UTF8     <span class="token operator">|</span> libc            <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span>            <span class="token operator">|</span>           <span class="token operator">|</span> <span class="token operator">=</span>c/postgres          +
           <span class="token operator">|</span>          <span class="token operator">|</span>          <span class="token operator">|</span>                 <span class="token operator">|</span>            <span class="token operator">|</span>            <span class="token operator">|</span>            <span class="token operator">|</span>           <span class="token operator">|</span> <span class="token assign-left variable">postgres</span><span class="token operator">=</span>CTc/postgres
 template1 <span class="token operator">|</span> postgres <span class="token operator">|</span> UTF8     <span class="token operator">|</span> libc            <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span> en_US.utf8 <span class="token operator">|</span>            <span class="token operator">|</span>           <span class="token operator">|</span> <span class="token operator">=</span>c/postgres          +
           <span class="token operator">|</span>          <span class="token operator">|</span>          <span class="token operator">|</span>                 <span class="token operator">|</span>            <span class="token operator">|</span>            <span class="token operator">|</span>            <span class="token operator">|</span>           <span class="token operator">|</span> <span class="token assign-left variable">postgres</span><span class="token operator">=</span>CTc/postgres
<span class="token punctuation">(</span><span class="token number">3</span> rows<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看所有用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>postgres-<span class="token comment"># \\du</span>
                             List of roles
 Role name <span class="token operator">|</span>                         Attributes                         
-----------+------------------------------------------------------------
 postgres  <span class="token operator">|</span> Superuser, Create role, Create DB, Replication, Bypass RLS
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看两个配置文件的地址</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>postgres<span class="token operator">=</span># show config_file<span class="token punctuation">;</span>
               config_file                
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
 <span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>lib<span class="token operator">/</span>postgresql<span class="token operator">/</span>data<span class="token operator">/</span>postgresql<span class="token punctuation">.</span>conf
<span class="token punctuation">(</span><span class="token number">1</span> row<span class="token punctuation">)</span>

postgres<span class="token operator">=</span># show hba_file<span class="token punctuation">;</span>
               hba_file               
<span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span><span class="token operator">--</span>
 <span class="token operator">/</span><span class="token keyword">var</span><span class="token operator">/</span>lib<span class="token operator">/</span>postgresql<span class="token operator">/</span>data<span class="token operator">/</span>pg_hba<span class="token punctuation">.</span>conf
<span class="token punctuation">(</span><span class="token number">1</span> row<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>退出命令行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>postgres-<span class="token comment"># \\q</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="远程登录" tabindex="-1"><a class="header-anchor" href="#远程登录" aria-hidden="true">#</a> 远程登录</h3><p>pg默认是不允许远程登录的，必须得修改其配置文件。修改<code>postgresql.conf</code>文件的中监听地址为如下。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>listen_addresses = &#39;*&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后再修改<code>pg_hba.conf</code>，添加如下规则</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code># TYPE  DATABASE        USER            ADDRESS                 METHOD
host 	all				all 			0.0.0.0/0 				md5
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改完后把容器重启下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> restart postg11
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202310111643870.png" style="zoom:80%;"><p>然后就可以连接成功了。</p>`,34);function f(_,y){const n=c("ExternalLinkIcon");return o(),t("div",null,[u,d,l(" more "),k,s("p",null,[a("官网："),s("a",b,[a("PostgreSQL: The world's most advanced open source database"),e(n)])]),m,v,s("p",null,[a("首先在dockerhub看看镜像"),s("a",g,[a("postgres - Official Image | Docker Hub"),e(n)])]),h])}const S=p(i,[["render",f],["__file","docker_install_postgres.html.vue"]]);export{S as default};
