import{_ as o,W as n,X as c,Y as g,Z as i,$ as a,a0 as t,a1 as r,C as p}from"./framework-a4c02b8f.js";const l={},d=i("h1",{id:"typora配合图床搭建教程",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#typora配合图床搭建教程","aria-hidden":"true"},"#"),a(" Typora配合图床搭建教程")],-1),s=i("figure",null,[i("img",{src:"https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/wallhaven-953v9d.png",alt:"",tabindex:"0",loading:"lazy"}),i("figcaption")],-1),h=i("p",null,"Typora配合搭建完毕后的图床，可以有效的解决的md文件的图片引用问题。",-1),m=i("hr",null,null,-1),u=i("p",null,"Typroa是一款很流行的Markdown编辑器，但是苦图片引用问题久矣，本地编写好的md文件发送给别人后，就好经常出现图片丢失问题，这种情况下只有两个方法：",-1),f=i("ul",null,[i("li",null,"把图片一起打包"),i("li",null,"引用在线图片")],-1),b=i("p",null,"一起打包显然会使得文件变得非常臃肿，在线图片也并不好找，同样的上述情况也适用于各个Markdown静态文档生成框架，举例VuePress，每个框架对于静态图片的引用都有着不同的规则，假设日后更换其他的框架图片引用问题将会非常的令人头疼。所以对于个人开发者而言，非常有必要搭建个人图床。",-1),_=i("br",null,null,-1),y=i("h2",{id:"picgo",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#picgo","aria-hidden":"true"},"#"),a(" PicGo")],-1),x=i("p",null,[i("strong",null,"一个用于快速上传图片并获取图片 URL 链接的工具"),a("，支持许多云服务商的对象存储，例如阿里云，腾讯云，七牛云等等，同时也支持Gitee，Github，软件技术基于Vue+Electron。")],-1),q={href:"https://github.com/Molunerfinn/PicGo#%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85",target:"_blank",rel:"noopener noreferrer"},G=r('<figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/image-20230324201548045.png" alt="image-20230324201548045" tabindex="0" loading="lazy"><figcaption>image-20230324201548045</figcaption></figure><p>下载完成后，打开是下面这个样子。</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/image-20230324201612971.png" alt="image-20230324201612971" tabindex="0" loading="lazy"><figcaption>image-20230324201612971</figcaption></figure><p>这个是最简陋的版本，一个个手动上传肯定是很累的，这里打开Typora的设置（如果是其他Markdown编辑器应该也是同理）</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/image-20230324201808929.png" alt="image-20230324201808929" tabindex="0" loading="lazy"><figcaption>image-20230324201808929</figcaption></figure><p>但此时PicGo还未配置成功，点击验证图片上传肯定是会失败的，接下来有两个选择。</p><h2 id="gitee" tabindex="-1"><a class="header-anchor" href="#gitee" aria-hidden="true">#</a> GItee</h2><p>这里之所以使用Gitee而不使用Github，主要是Github国内的访问速度太感人了，想要达到正常速度必须自行搭建CDN，所以这里利用一下免费的GItee。不过Gitee前不久已经加了防盗链，如果是在网站上引用图床肯定是会失效的，但如果只是在本地Markdown文件引用依旧可以成功。</p><h3 id="创建仓库" tabindex="-1"><a class="header-anchor" href="#创建仓库" aria-hidden="true">#</a> 创建仓库</h3><p>首先需要创建一个<strong>公开</strong>的仓库，不公开访问不了，名称建议英文，最好不要带特殊符号。</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/image-20230324202452126.png" alt="image-20230324202452126" tabindex="0" loading="lazy"><figcaption>image-20230324202452126</figcaption></figure><h3 id="私人令牌" tabindex="-1"><a class="header-anchor" href="#私人令牌" aria-hidden="true">#</a> 私人令牌</h3><p>接下来要获取私人令牌</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/image-20230324202548316.png" alt="image-20230324202548316" tabindex="0" loading="lazy"><figcaption>image-20230324202548316</figcaption></figure><p>在个人设置中创建一个私人令牌。</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/image-20230324202639749.png" alt="image-20230324202639749" tabindex="0" loading="lazy"><figcaption>image-20230324202639749</figcaption></figure><p>描述随意，建议只放开这几个权限，生成后记住你的私人令牌。</p><h3 id="下载插件" tabindex="-1"><a class="header-anchor" href="#下载插件" aria-hidden="true">#</a> 下载插件</h3><p>打开PciGo软件，点开插件设置，搜索Gitee，下载gitee-Uploader。</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/image-20230324202915702.png" alt="image-20230324202915702" tabindex="0" loading="lazy"><figcaption>image-20230324202915702</figcaption></figure><p>等待安装完毕后，在图床设置中填写gitee的配置项</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/image-20230324203304435.png" alt="image-20230324203304435" tabindex="0" loading="lazy"><figcaption>image-20230324203304435</figcaption></figure><p>完成后点击确认，并设置为默认图床，然后到上传区测试结果即可</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202303242051716.png" alt="image-20230324205101674" tabindex="0" loading="lazy"><figcaption>image-20230324205101674</figcaption></figure><br><h2 id="腾讯云cos" tabindex="-1"><a class="header-anchor" href="#腾讯云cos" aria-hidden="true">#</a> 腾讯云Cos</h2><p>作者恰好前不久买了腾讯云对象存储的资源包，就刚好拿来当图床用，其他云服务商的配置过程都是类似的。首先在对象存储控制台中访问密钥</p><h3 id="申请密钥" tabindex="-1"><a class="header-anchor" href="#申请密钥" aria-hidden="true">#</a> 申请密钥</h3><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/image-20230324203515364.png" alt="image-20230324203515364" tabindex="0" loading="lazy"><figcaption>image-20230324203515364</figcaption></figure><p>然后前往密钥界面</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/image-20230324203613705.png" alt="image-20230324203613705" tabindex="0" loading="lazy"><figcaption>image-20230324203613705</figcaption></figure><p>记住<code>APPID</code>，<code>SecretId</code>，<code>SecretKey</code></p><h3 id="创建桶" tabindex="-1"><a class="header-anchor" href="#创建桶" aria-hidden="true">#</a> 创建桶</h3><figure><img src="https://gitee.com/FLoat1024/pic/raw/master/img/image-20230324204211170.png" alt="image-20230324204211170" tabindex="0" loading="lazy"><figcaption>image-20230324204211170</figcaption></figure><p>在创建存储桶时必须要保证桶的权限是公共读私有写，也就是可以匿名访问，记住<code>BucketId</code>和区域后就可以前往PicoGo中填写配置。</p><h3 id="填写配置" tabindex="-1"><a class="header-anchor" href="#填写配置" aria-hidden="true">#</a> 填写配置</h3><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/image-20230324203822706.png" alt="image-20230324203822706" tabindex="0" loading="lazy"><figcaption>image-20230324203822706</figcaption></figure><p>填写完配置项后确认并设置为默认图床，然后在上传区测试即可。</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/image-20230324203857990.png" alt="image-20230324203857990" tabindex="0" loading="lazy"><figcaption>image-20230324203857990</figcaption></figure><br><h2 id="最后" tabindex="-1"><a class="header-anchor" href="#最后" aria-hidden="true">#</a> 最后</h2><p>配置完成后的效果是Typora直接复制图片就会上传到个人图床，这样日后文件迁移也会方便的多，当然前提是得有一个稳定的图床。</p>',42);function z(k,P){const e=p("ExternalLinkIcon");return n(),c("div",null,[d,s,h,g(" more "),m,u,f,b,_,y,x,i("p",null,[a("PicGo下载："),i("a",q,[a("Molunerfinn/PicGo: A simple & beautiful tool for pictures uploading built by vue-cli-electron-builder (github.com)"),t(e)])]),G])}const B=o(l,[["render",z],["__file","pic.html.vue"]]);export{B as default};
