const t=JSON.parse('{"key":"v-1b99422e","path":"/posts/git/2.branch.html","title":"分支","lang":"zh-CN","frontmatter":{"date":"2022-11-29T00:00:00.000Z","article":true,"category":["Git"],"tag":["VCS","Git"],"description":"分支 如果说有什么特性能让git从其它vcs中脱颖而出，那唯一的答案就是git的分支管理，因为它很快，快到分支切换无感，即便是一个非常大的仓库。一般仓库都会有一个主分支用于存放核心代码，当你想要做出一些修改时，不必修改主分支，可以新建一个新分支，在新分支中提交然后将修改合并到主分支，这样的工作流程在大型项目中尤其适用。在git中每一次提交都会包含一个指针，它指向的是该次提交的内容快照，同时也会指向上一次提交。","head":[["meta",{"property":"og:url","content":"https://246859.github.io/my-blog-giscus/posts/git/2.branch.html"}],["meta",{"property":"og:site_name","content":"寒江蓑笠翁"}],["meta",{"property":"og:title","content":"分支"}],["meta",{"property":"og:description","content":"分支 如果说有什么特性能让git从其它vcs中脱颖而出，那唯一的答案就是git的分支管理，因为它很快，快到分支切换无感，即便是一个非常大的仓库。一般仓库都会有一个主分支用于存放核心代码，当你想要做出一些修改时，不必修改主分支，可以新建一个新分支，在新分支中提交然后将修改合并到主分支，这样的工作流程在大型项目中尤其适用。在git中每一次提交都会包含一个指针，它指向的是该次提交的内容快照，同时也会指向上一次提交。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-02T06:18:03.000Z"}],["meta",{"property":"article:author","content":"寒江蓑笠翁"}],["meta",{"property":"article:tag","content":"VCS"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:published_time","content":"2022-11-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-02T06:18:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分支\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-11-29T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-02T06:18:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"寒江蓑笠翁\\",\\"url\\":\\"https://mrhope.site\\"}]}"]]},"headers":[{"level":2,"title":"创建切换","slug":"创建切换","link":"#创建切换","children":[]},{"level":2,"title":"临时修改","slug":"临时修改","link":"#临时修改","children":[]},{"level":2,"title":"合并删除","slug":"合并删除","link":"#合并删除","children":[{"level":3,"title":"恢复分支","slug":"恢复分支","link":"#恢复分支","children":[]},{"level":3,"title":"冲突解决","slug":"冲突解决","link":"#冲突解决","children":[]}]},{"level":2,"title":"变基操作","slug":"变基操作","link":"#变基操作","children":[{"level":3,"title":"双分支","slug":"双分支","link":"#双分支","children":[]},{"level":3,"title":"三分支","slug":"三分支","link":"#三分支","children":[]},{"level":3,"title":"缺点","slug":"缺点","link":"#缺点","children":[]}]}],"git":{"createdTime":1701497883000,"updatedTime":1701497883000,"contributors":[{"name":"246859","email":"2633565580@qq.com","commits":1}]},"readingTime":{"minutes":48.44,"words":7266},"filePathRelative":"posts/git/2.branch.md","localizedDate":"2022年11月29日","excerpt":"<h1> 分支</h1>\\n<p>如果说有什么特性能让git从其它vcs中脱颖而出，那唯一的答案就是git的分支管理，因为它很快，快到分支切换无感，即便是一个非常大的仓库。一般仓库都会有一个主分支用于存放核心代码，当你想要做出一些修改时，不必修改主分支，可以新建一个新分支，在新分支中提交然后将修改合并到主分支，这样的工作流程在大型项目中尤其适用。在git中每一次提交都会包含一个指针，它指向的是该次提交的内容快照，同时也会指向上一次提交。</p>\\n<figure><img src=\\"https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309081917035.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>","autoDesc":true}');export{t as data};
