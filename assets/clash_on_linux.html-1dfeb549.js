import{_ as n,W as i,X as l,Y as t,Z as a,$ as e,a0 as r,a1 as c,C as d}from"./framework-a4c02b8f.js";const o={},p=a("h1",{id:"在linux上使用clash",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#在linux上使用clash","aria-hidden":"true"},"#"),e(" 在Linux上使用clash")],-1),u=a("img",{src:"https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202312021437923.png"},null,-1),m=a("hr",null,null,-1),v=a("p",null,[e("最近在测试SteamAPI Client，不得不吐槽一下steam提供的web接口返回的响应结构真是"),a("strong",null,"多种多样"),e("，可以看的出来都是陈年老项目了。不过重点不是这个，虽然Steam的游戏服务在国内不需要梯子也可以访问，但是他们提供的接口如果不走代理的话，那基本上请求十次八次超时，为了解决这个问题只好在测试机上弄clash。")],-1),h=a("p",null,"clash是用go编写的，一大好处就是安装非常方便，因为除了一个二进制文件其它什么都不需要，并且还是开源跨平台的。",-1),b=a("h2",{id:"安装",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#安装","aria-hidden":"true"},"#"),e(" 安装")],-1),g={href:"https://github.com/Dreamacro/clash",target:"_blank",rel:"noopener noreferrer"},x=c(`<p>从release中找到最新版，然后找到对应的版本。</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309141836378.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>wget下载到本地</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">wget</span> https://github.com/Dreamacro/clash/releases/download/v1.18.0/clash-linux-amd64-v1.18.0.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>gzip解压</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">gzip</span> <span class="token parameter variable">-d</span> clash-linux-amd64-v1.18.0.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>为了方便使用将其链接到bin目录下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">ln</span> <span class="token parameter variable">-s</span> clash-linux-amd64-v1.18.0 /usr/local/bin/clash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>完事后查看版本，输出没问题就是安装成功了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ clash <span class="token parameter variable">-v</span>
Clash v1.18.0 linux amd64 with go1.21.0 Thu Aug <span class="token number">17</span> <span class="token number">14</span>:46:28 UTC <span class="token number">2023</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="代理" tabindex="-1"><a class="header-anchor" href="#代理" aria-hidden="true">#</a> 代理</h2><p>导入配置文件，clash的配置文件相当复杂，一般你的代理服务商都会提供现有的配置以供导入，比如我使用的glados</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> http_config_url <span class="token operator">&gt;</span> glados.yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后启动clash，指定配置文件和路径，<code>-d</code>指的是配置目录，clash在刚开始时会尝试下载country.db如果不存在的话。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ clash <span class="token parameter variable">-f</span>  glados.yaml <span class="token parameter variable">-d</span> <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>有如下输出即可</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>INFO[0000] Start initial compatible provider Auto-Failover 
INFO[0000] Start initial compatible provider Auto-Edge  
INFO[0000] Start initial compatible provider OPENAI-NOT-STABLE 
INFO[0000] Start initial compatible provider NETFLIX    
INFO[0000] Start initial compatible provider Video      
INFO[0000] Start initial compatible provider Auto-Fast  
INFO[0000] Start initial compatible provider Auto       
INFO[0000] Start initial compatible provider Proxy      
INFO[0000] Start initial compatible provider Express    
INFO[0000] inbound http://127.0.0.1:7890 create success. 
INFO[0000] inbound socks://127.0.0.1:7891 create success. 
INFO[0000] RESTful API listening at: 127.0.0.1:9090
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到http代理端口<code>7890</code>，由于socks不需要就不配置。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token builtin class-name">export</span> <span class="token assign-left variable">http_proxy</span><span class="token operator">=</span>http://127.0.0.1:7890
$ <span class="token builtin class-name">export</span> <span class="token assign-left variable">https_proxy</span><span class="token operator">=</span>https://127.0.0.1:7890
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在配置生效前来看看请求steamapi是什么效果，可以看到失败了。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> https://api.steampowered.com/ISteamWebAPIUtil/GetServerInfo/v1/
curl: <span class="token punctuation">(</span><span class="token number">56</span><span class="token punctuation">)</span> OpenSSL SSL_read: error:0A000126:SSL routines::unexpected eof <span class="token keyword">while</span> reading, errno <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>在开启clash后</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> https://api.steampowered.com/ISteamWebAPIUtil/GetServerInfo/v1/
<span class="token punctuation">{</span><span class="token string">&quot;servertime&quot;</span>:1694693304,<span class="token string">&quot;servertimestring&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Thu Sep 14 05:08:24 2023&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>clash日志这里也有输出，是走了代理的</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>NFO[0036] [TCP] 127.0.0.1:32822 --&gt; api.steampowered.com:443 match DomainSuffix(steampowered.com) using GLaDOS-D1-01
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果有需求的话，可以做成系统服务，进行更加方便的管理。</p>`,26);function k(_,f){const s=d("ExternalLinkIcon");return i(),l("div",null,[p,u,t(" more "),m,v,h,b,a("p",null,[e("开源地址："),a("a",g,[e("Dreamacro/clash: A rule-based tunnel in Go. (github.com)"),r(s)])]),x])}const I=n(o,[["render",k],["__file","clash_on_linux.html.vue"]]);export{I as default};
