import{_ as t,W as l,X as o,Z as a,$ as n,a0 as e,a1 as i,C as c}from"./framework-a4c02b8f.js";const r={},p=a("h1",{id:"托管服务器",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#托管服务器","aria-hidden":"true"},"#"),n(" 托管服务器")],-1),d=a("p",null,"在远程仓库中，有许多优秀的第三方代码托管商可以使用，这对于开源项目而言可能足够使用，但是对于公司或者企业内部，就不能使用第三方的代码托管了，为此我们需要自行搭建代码托管服务器，好在市面上有许多开源的自建解决方案，比如bitbucket，gitlab等。",-1),u=a("h2",{id:"gitlab",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#gitlab","aria-hidden":"true"},"#"),n(" Gitlab")],-1),g=a("p",null,"gitlab是一个采用Ruby开发的开源代码管理平台，支持web管理界面，下面会演示如何自己搭建一个GitLab服务器，演示的操作系统为Ubuntu。",-1),m={href:"https://docs.gitlab.com/16.3/ee/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/gitlabhq/gitlabhq",target:"_blank",rel:"noopener noreferrer"},v=i(`<div class="hint-container tip"><p class="hint-container-title">提示</p><p>gitlab要求服务器的最小内存为4g，低于这个值可能会无法正常运行。</p></div><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><p>首先更新一下索引</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">sudo</span> <span class="token function">apt</span> update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后安装几个软件包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">curl</span> openssh-server ca-certificates postfix gnupg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,6),h={href:"https://packages.gitlab.com/gitlab/gitlab-ce",target:"_blank",rel:"noopener noreferrer"},k=a("code",null,"ubuntu/focal",-1),f=i(`<figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309101552264.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>进入该版本，用curl拉取并执行脚本，或者你也可以复制脚本到本地执行</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309101555335.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token parameter variable">-s</span> https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后用apt再安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> gitlab-ce<span class="token operator">=</span><span class="token number">16.3</span>.2-ce.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或者你也可以wget把安装包下载到本地手动安装</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309101602136.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>安装过程可能会有点久，安装包大概有一两个G，当你看到如下输出时就说明安装成功了。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>It looks like GitLab has not been configured yet<span class="token punctuation">;</span> skipping the upgrade script.

       *.                  *.
      ***                 ***
     *****               *****
    .******             *******
    ********            ********
   ,,,,,,,,,***********,,,,,,,,,
  ,,,,,,,,,,,*********,,,,,,,,,,,
  .,,,,,,,,,,,*******,,,,,,,,,,,,
      ,,,,,,,,,*****,,,,,,,,,.
         ,,,,,,,****,,,,,,
            .,,,***,,,,
                ,*,.
  


     _______ __  __          __
    / ____<span class="token punctuation">(</span>_<span class="token punctuation">)</span> /_/ /   ____ _/ /_
   / / __/ / __/ /   / __ <span class="token variable"><span class="token variable">\`</span>/ __ <span class="token punctuation">\\</span>
  / /_/ / / /_/ /___/ /_/ / /_/ /
  <span class="token punctuation">\\</span>____/_/<span class="token punctuation">\\</span>__/_____/<span class="token punctuation">\\</span>__,_/_.___/
  

Thank you <span class="token keyword">for</span> installing GitLab<span class="token operator">!</span>
GitLab was unable to detect a valid <span class="token function">hostname</span> <span class="token keyword">for</span> your instance.
Please configure a URL <span class="token keyword">for</span> your GitLab instance by setting <span class="token variable">\`</span></span>external_url\`
configuration <span class="token keyword">in</span> /etc/gitlab/gitlab.rb file.
Then, you can start your GitLab instance by running the following command:
  <span class="token function">sudo</span> gitlab-ctl reconfigure

For a comprehensive list of configuration options please see the Omnibus GitLab readme
https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/README.md

Help us improve the installation experience, <span class="token builtin class-name">let</span> us know how we did with a <span class="token number">1</span> minute survey:
https://gitlab.fra1.qualtrics.com/jfe/form/SV_6kVqZANThUQ1bZb?installation<span class="token operator">=</span>omnibus<span class="token operator">&amp;</span><span class="token assign-left variable">release</span><span class="token operator">=</span><span class="token number">16</span>-3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h3><p>gitlab安装完毕后，我们需要做一些初始化的配置。上面的输出<code>configuration in /etc/gitlab/gitlab.rb file</code>已经告知配置文件的地址</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">vim</span> /etc/gitlab/gitlab.rb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第一点就是修改外部URL，格式为<code>schema://host:port</code> ，端口不填默认为80端口。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## GitLab URL</span>
<span class="token comment">##! URL on which GitLab will be reachable.</span>
<span class="token comment">##! For more details on configuring external_url see:</span>
<span class="token comment">##! https://docs.gitlab.com/omnibus/settings/configuration.html#configuring-the-external-url-for-gitlab</span>
<span class="token comment">##!</span>
<span class="token comment">##! Note: During installation/upgrades, the value of the environment variable</span>
<span class="token comment">##! EXTERNAL_URL will be used to populate/replace this value.</span>
<span class="token comment">##! On AWS EC2 instances, we also attempt to fetch the public hostname/IP</span>
<span class="token comment">##! address from AWS. For more details, see:</span>
<span class="token comment">##! https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-retrieval.html</span>
external_url <span class="token string">&#39;http://your.example.com&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改完后运行，让gitlab重新加载配置。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ gitlab-ctl reconfigure
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>最后会有这么一段输出</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Notes:
Default admin account has been configured with following details:
Username: root
Password: You didn&#39;t opt-in to print initial root password to STDOUT.
Password stored to /etc/gitlab/initial_root_password. This <span class="token function">file</span> will be cleaned up <span class="token keyword">in</span> first reconfigure run after <span class="token number">24</span> hours.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认密码存放在指定文件中，且24小时后会自动删除，所以建议及时修改，在浏览器中输入<code>external_url</code>，并输入默认的账号密码，访问gitlab。</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309102027969.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在Admin Area中，访问users模块</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309102029162.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这里的stranger就是默认的管理账号，点击edit修改账号名称和密码。</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309102030012.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>至此，基础的使用配置就完成了，可以开始使用了。如果阅读英文有障碍的话，可以前往<code>Admin Area/Settings/Preferences/Localization</code>调整默认的语言设置，支持简繁中。</p><h3 id="邮箱" tabindex="-1"><a class="header-anchor" href="#邮箱" aria-hidden="true">#</a> 邮箱</h3><p>gitlab大大小小的通知都要用邮箱来进行，邮箱不配置的话，默认发信人就是<code>gitlab@服务IP地址</code>，主要部分在配置文件的这一块。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>gitlab_rails[&#39;smtp_enable&#39;] = true
gitlab_rails[&#39;smtp_address&#39;] = &quot;smtp.example.com&quot;
gitlab_rails[&#39;smtp_port&#39;] = 666
gitlab_rails[&#39;smtp_user_name&#39;] = &quot;gitlab@example.com
gitlab_rails[&#39;smtp_password&#39;] = &quot;123456&quot;
gitlab_rails[&#39;smtp_domain&#39;] = &quot;smtp.example.com&quot;
gitlab_rails[&#39;smtp_authentication&#39;] = &quot;login&quot;
# gitlab_rails[&#39;smtp_enable_starttls_auto&#39;] = true
gitlab_rails[&#39;smtp_tls&#39;] = false
# gitlab_rails[&#39;smtp_pool&#39;] = false

###! **Can be: &#39;none&#39;, &#39;peer&#39;, &#39;client_once&#39;, &#39;fail_if_no_peer_cert&#39;**
###! Docs: http://api.rubyonrails.org/classes/ActionMailer/Base.html
# gitlab_rails[&#39;smtp_openssl_verify_mode&#39;] = &#39;none&#39;

# gitlab_rails[&#39;smtp_ca_path&#39;] = &quot;/etc/ssl/certs&quot;
# gitlab_rails[&#39;smtp_ca_file&#39;] = &quot;/etc/ssl/certs/ca-certificates.crt&quot;

### Email Settings

# gitlab_rails[&#39;gitlab_email_enabled&#39;] = true

##! If your SMTP server does not like the default &#39;From: gitlab@gitlab.example.com&#39;
##! can change the &#39;From&#39; with this setting.
gitlab_rails[&#39;gitlab_email_from&#39;] = &#39;gitlab@example.com&#39;
gitlab_rails[&#39;gitlab_email_display_name&#39;] = &#39;gitlab&#39;
# gitlab_rails[&#39;gitlab_email_reply_to&#39;] = &#39;noreply@example.com&#39;
# gitlab_rails[&#39;gitlab_email_subject_suffix&#39;] = &#39;&#39;
# gitlab_rails[&#39;gitlab_email_smime_enabled&#39;] = false
# gitlab_rails[&#39;gitlab_email_smime_key_file&#39;] = &#39;/etc/gitlab/ssl/gitlab_smime.key&#39;
# gitlab_rails[&#39;gitlab_email_smime_cert_file&#39;] = &#39;/etc/gitlab/ssl/gitlab_smime.crt&#39;
# gitlab_rails[&#39;gitlab_email_smime_ca_certs_file&#39;] = &#39;/etc/gitlab/ssl/gitlab_smime_cas.crt&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置完后，使用<code>gitlab-ctl reconfigure</code>重新加载配置，通过命令<code>gitlab-rails console</code>打开控制台，执行</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>Notify.test_email(&#39;XXXXXX@example.com&#39;,&#39;test Gitlab Email&#39;,&#39;Test&#39;).deliver_now
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>测试下能否正常发送邮件，成功就说明配置正常。</p><h3 id="优化" tabindex="-1"><a class="header-anchor" href="#优化" aria-hidden="true">#</a> 优化</h3><p>由于gitlab是ruby写的，这个语言最大的问题就是耗内存和性能低，在写这篇文章的时候，我用的是腾讯云活动打折买整的3年2c4g的云服务器，有时候内存爆满访问502，体验比较糟糕，但是服务器价格不菲，升级的费用相当昂贵。为了能够让贫民机器也能够运行，下面讲一下怎么去做一些简单的优化，让gitlab能够在大多数情况下正常运行。整体就两个思路</p><ol><li>开启交换内存</li><li>关闭一些不必要的插件和功能，节省资源、</li></ol><p>第一种方法开启交换内存就是内存不够用了拿磁盘来凑，建议自己去了解，不属于本文要讲的内容。下面主要讲一下哪些功能是可以关闭的。</p><p>1.Gravatar，这是一个公共的头像托管平台，头像这种功能没什么太大的必要，建议关闭，设置的地方在<code>Admin Area/Setting/General/Account and limit/</code>下</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309102133897.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>关闭后，用户头像就会变成文字而非图像。</p><p>2.关闭Prometheus监控，这是一个gitlab的监控组件，如果只是个人使用可以关闭来节省资源，在配置文件中</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>prometheus_monitoring[&#39;enable&#39;] = false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="导入" tabindex="-1"><a class="header-anchor" href="#导入" aria-hidden="true">#</a> 导入</h3><p>下面要开启一个很有用的特性，就是让gitlab支持从github导入项目，还支持其它的平台，主要有</p><ul><li>Github</li><li>BitBucket Cloud</li><li>FogBugz</li><li>Gitea</li></ul><p>也支持url导入，想从什么来源导入就需要去设置里面专门开启</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309102137168.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后在github中创建一个personal token，需要勾选repo部分，在创建新项目的时候选择导入</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309111018705.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>选择github，输入你的personal token，然后就会进入导入页面</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309111019943.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>进入到导入页面后，就可以自己选择要导入哪些仓库了。</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309111019402.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="其它" tabindex="-1"><a class="header-anchor" href="#其它" aria-hidden="true">#</a> 其它</h3><p>gitlab总体来说使用起来跟github非常相似，分为三个大的部分，如下图</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309102034198.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>Your work，就是工作区，仓库的创建，组织的管理等等。</li><li>Explore，就类似探索广场，如果你只是自己使用，这个部分没啥太大的用处。</li><li>Admin Area，就是后台管理负责的部分，包括用户管理，语言管理，配置管理等等关于这个网站大大小小的细节。</li></ul><p>到目前为止已经可以基本使用了，介绍的话真要一个个介绍得写到猴年马月，其它具体怎么使用建议看官方文档。gitlab功能很全，但也比较笨重，它更适合中大型的公司项目，有几百上千人的规模。（光是在我的服务器上搭建测试gitlab，就已经卡死机四五次了）</p><h2 id="gogs" tabindex="-1"><a class="header-anchor" href="#gogs" aria-hidden="true">#</a> Gogs</h2>`,58),_={href:"https://github.com/gogs/gogs",target:"_blank",rel:"noopener noreferrer"},y={href:"https://gogs.io/",target:"_blank",rel:"noopener noreferrer"},q=a("figure",null,[a("img",{src:"https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309111357482.png",alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),x={href:"https://gogs.io/docs",target:"_blank",rel:"noopener noreferrer"},w=a("figure",null,[a("img",{src:"https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309111337172.png",alt:"",tabindex:"0",loading:"lazy"}),a("figcaption")],-1),G={href:"https://try.gogs.io/",target:"_blank",rel:"noopener noreferrer"},E=a("h2",{id:"gitea",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#gitea","aria-hidden":"true"},"#"),n(" Gitea")],-1),S={href:"https://github.com/go-gitea/gitea",target:"_blank",rel:"noopener noreferrer"},A={href:"https://docs.gitea.com/zh-cn/",target:"_blank",rel:"noopener noreferrer"},L=i(`<figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309111356763.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>Gitea是由Gogs fork发展而来的，两者的目标都是为了构建尽量小巧的代码托管平台，但是功能要比Gogs更加丰富，属于是Gogs的加强版，个人比较推荐使用这个。</p><h3 id="前期准备" tabindex="-1"><a class="header-anchor" href="#前期准备" aria-hidden="true">#</a> 前期准备</h3><p>gitea比gitlab小巧很多，所以很多东西需要我们自己进行配置。gitea的orm是XORM，所以XORM支持的数据库基本上都支持，这里使用的是Mysql，通过docker进行搭建。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">docker</span> run <span class="token parameter variable">-p</span> <span class="token number">3306</span>:3306/tcp <span class="token parameter variable">--name</span> mysql8 <span class="token punctuation">\\</span>
<span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token punctuation">\\</span>
<span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /root/data/mysql/conf/:/etc/mysql/conf.d <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /root/data/mysql/data/:/var/lib/mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-v</span> /root/data/mysql/log/:/var/log/mysql <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_ROOT_PASSWORD</span><span class="token operator">=</span><span class="token number">123456</span> <span class="token punctuation">\\</span>
<span class="token parameter variable">-e</span> <span class="token assign-left variable">MYSQL_DATABASE</span><span class="token operator">=</span>giteadb <span class="token punctuation">\\</span>
<span class="token parameter variable">-d</span> mysql:8.0.27
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后创建一个名为gitea的用户</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">USER</span> <span class="token string">&#39;gitea&#39;</span> IDENTIFIED <span class="token keyword">BY</span> <span class="token string">&#39;gitea&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后授权</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">GRANT</span> <span class="token keyword">ALL</span> <span class="token keyword">PRIVILEGES</span> <span class="token keyword">ON</span> giteadb<span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">TO</span> <span class="token string">&#39;gitea&#39;</span><span class="token punctuation">;</span>
FLUSH <span class="token keyword">PRIVILEGES</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>最后测试连接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql <span class="token parameter variable">-u</span> gitea <span class="token parameter variable">-p</span> giteadb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>确保你的git版本大于等2.0，然后还要创建用户</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ adduser <span class="token punctuation">\\</span>
   <span class="token parameter variable">--system</span> <span class="token punctuation">\\</span>
   <span class="token parameter variable">--shell</span> /bin/bash <span class="token punctuation">\\</span>
   <span class="token parameter variable">--gecos</span> <span class="token string">&#39;Git Version Control&#39;</span> <span class="token punctuation">\\</span>
   <span class="token parameter variable">--group</span> <span class="token punctuation">\\</span>
   --disabled-password <span class="token punctuation">\\</span>
   <span class="token parameter variable">--home</span> /home/git <span class="token punctuation">\\</span>
   <span class="token function">git</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建工作路径</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /var/lib/gitea/<span class="token punctuation">{</span>custom,data,log<span class="token punctuation">}</span>
<span class="token function">chown</span> <span class="token parameter variable">-R</span> git:git /var/lib/gitea/
<span class="token function">chmod</span> <span class="token parameter variable">-R</span> <span class="token number">750</span> /var/lib/gitea/
<span class="token function">mkdir</span> /etc/gitea
<span class="token function">chown</span> root:git /etc/gitea
<span class="token function">chmod</span> <span class="token number">770</span> /etc/gitea
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>导出环境变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">GITEA_WORK_DIR</span><span class="token operator">=</span>/var/lib/gitea/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用wget下载文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> <span class="token parameter variable">-O</span> gitea https://dl.gitea.com/gitea/1.20.4/gitea-1.20.4-linux-amd64
<span class="token function">chmod</span> +x gitea
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>创建软连接</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ln</span> <span class="token parameter variable">-s</span> /home/git/gitea /usr/local/bin/gitea
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="配置文件" tabindex="-1"><a class="header-anchor" href="#配置文件" aria-hidden="true">#</a> 配置文件</h3>`,22),R=a("code",null,"/var/lib/gitea/custom/conf/app.ini",-1),z={href:"https://github.com/go-gitea/gitea/blob/release/v1.20/custom/conf/app.example.ini",target:"_blank",rel:"noopener noreferrer"},T=i(`<ul><li>数据库配置</li><li>站点设置</li><li>服务器设置</li><li>邮箱设置</li><li>三方服务设置</li><li>初始管理员设置</li></ul><p>刚开始的话配置好数据库就行了，其它配置gitea后面会有UI界面进行引导，端口默认为3000。</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">database</span><span class="token punctuation">]</span></span>
<span class="token comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
<span class="token comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
<span class="token comment">;;</span>
<span class="token comment">;; Database to use. Either &quot;mysql&quot;, &quot;postgres&quot;, &quot;mssql&quot; or &quot;sqlite3&quot;.</span>
<span class="token comment">;;</span>
<span class="token comment">;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;</span>
<span class="token comment">;;</span>
<span class="token comment">;; MySQL Configuration</span>
<span class="token comment">;;</span>
<span class="token key attr-name">DB_TYPE</span> <span class="token punctuation">=</span> <span class="token value attr-value">mysql</span>
<span class="token key attr-name">HOST</span> <span class="token punctuation">=</span> <span class="token value attr-value">127.0.0.1:3306 ; can use socket e.g. /var/run/mysqld/mysqld.sock</span>
<span class="token key attr-name">NAME</span> <span class="token punctuation">=</span> <span class="token value attr-value">gitea</span>
<span class="token key attr-name">USER</span> <span class="token punctuation">=</span> <span class="token value attr-value">gitea</span>
<span class="token key attr-name">PASSWD</span> <span class="token punctuation">=</span> <span class="token value attr-value">wyh246859 ;Use PASSWD = \`your password\` for quoting if you use special characters in the password.</span>
<span class="token comment">;SSL_MODE = false ; either &quot;false&quot; (default), &quot;true&quot;, or &quot;skip-verify&quot;</span>
<span class="token key attr-name">CHARSET</span> <span class="token punctuation">=</span> <span class="token value attr-value">utf8mb4 ;either &quot;utf8&quot; or &quot;utf8mb4&quot;, default is &quot;utf8mb4&quot;.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="定义linux服务" tabindex="-1"><a class="header-anchor" href="#定义linux服务" aria-hidden="true">#</a> 定义Linux服务</h3>`,4),D={href:"https://github.com/go-gitea/gitea/blob/release/v1.20/contrib/systemd/gitea.service",target:"_blank",rel:"noopener noreferrer"},I=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>Gitea <span class="token punctuation">(</span>Git with a cup of tea<span class="token punctuation">)</span>
<span class="token assign-left variable">After</span><span class="token operator">=</span>syslog.target
<span class="token assign-left variable">After</span><span class="token operator">=</span>network.target

<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">RestartSec</span><span class="token operator">=</span>2s
<span class="token assign-left variable">Type</span><span class="token operator">=</span>notify
<span class="token assign-left variable">User</span><span class="token operator">=</span>git
<span class="token assign-left variable">Group</span><span class="token operator">=</span>git
<span class="token assign-left variable">WorkingDirectory</span><span class="token operator">=</span>/var/lib/gitea/

<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/local/bin/gitea web <span class="token parameter variable">--config</span> /etc/gitea/app.ini
<span class="token assign-left variable">Restart</span><span class="token operator">=</span>always
<span class="token assign-left variable">Environment</span><span class="token operator">=</span><span class="token environment constant">USER</span><span class="token operator">=</span>git <span class="token assign-left variable"><span class="token environment constant">HOME</span></span><span class="token operator">=</span>/home/git <span class="token assign-left variable">GITEA_WORK_DIR</span><span class="token operator">=</span>/var/lib/gitea
<span class="token assign-left variable">WatchdogSec</span><span class="token operator">=</span>30s

<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将上述内容复制到<code>/etc/systemd/system/gitea.service</code>，然后启动服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl <span class="token builtin class-name">enable</span> gitea
<span class="token function">sudo</span> systemctl start gitea
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="初始配置" tabindex="-1"><a class="header-anchor" href="#初始配置" aria-hidden="true">#</a> 初始配置</h3><p>然后访问地址，根据gitea的引导进行初始化配置，gitea并不会像gitlab一样可以热加载配置，gitea所有的配置都需要修配置文件。</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309111550996.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>你也可以在初始化时设置管理员账号，或者也可以在后续注册，第一个用户默认为管理员，其它的配置自己根据需求来定。</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309111552282.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>记得确保当前用户具有修改配置文件的权限，然后点击安装，加载几秒后就可以了。</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309111652405.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后进入到主页面就可以使用了</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309111656403.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>运行后相当的流畅，这里放一张性能图。</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309111658664.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="导入仓库" tabindex="-1"><a class="header-anchor" href="#导入仓库" aria-hidden="true">#</a> 导入仓库</h3><p>导入的话支持以下几个仓库</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309111659595.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>还是以github为例，拿到自己的personal token，输入想要导入的url</p><figure><img src="https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202309111700583.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>这些操作基本上跟gtilab一致。</p>`,20);function U(O,P){const s=c("ExternalLinkIcon");return l(),o("div",null,[p,d,u,g,a("p",null,[n("关于gitlab更详细的文档可以前往"),a("a",m,[n("GitLab Docs | GitLab"),e(s)]),n("，本文只是一个简单的介绍与基本使用。")]),a("p",null,[n("开源镜像地址："),a("a",b,[n("gitlabhq/gitlabhq: GitLab CE Mirror | Please open new issues in our issue tracker on GitLab.com (github.com)"),e(s)])]),v,a("p",null,[n("前往"),a("a",h,[n("gitlab/gitlab-ce - Packages · packages.gitlab.com"),e(s)]),n("官方安装包网站，选择属于你自己对应版本的软件包，这里选择的是"),k]),f,a("p",null,[n("开源地址："),a("a",_,[n("gogs/gogs: Gogs is a painless self-hosted Git service (github.com)"),e(s)])]),a("p",null,[n("文档："),a("a",y,[n("Gogs: A painless self-hosted Git service"),e(s)])]),q,a("p",null,[n("如果你只是一个独立开发者，或是一个小团队，我建议使用"),a("a",x,[n("Gogs"),e(s)]),n("，它很小巧，同时也是用go语言进行开发的，所以配置要求相当低，不会像gitlab一样动辄要求2c4g以上的服务器才能运行，即便是在树莓派上也能跑，比较适合小团队。")]),w,a("p",null,[n("可以前往"),a("a",G,[n("在线体验 - Gogs"),e(s)]),n("体验一下功能，页面和功能都相当简洁。")]),E,a("p",null,[n("开源地址："),a("a",S,[n("go-gitea/gitea"),e(s)])]),a("p",null,[n("文档地址："),a("a",A,[n("文档 | Gitea Documentation"),e(s)])]),L,a("p",null,[n("配置文件地址在"),R,n("，如果没有需要自行创建，配置文件模板地址在"),a("a",z,[n("gitea/custom/conf/app.example.ini"),e(s)]),n("。Gitea的配置项相当的多，且不像Gitalb那样支持热加载，总体来说分为")]),T,a("p",null,[n("service文件源地址在"),a("a",D,[n("gitea/contrib/systemd/gitea.service at release/v1.20 · go-gitea/gitea (github.com)"),e(s)])]),I])}const N=t(r,[["render",U],["__file","4.gitserver.html.vue"]]);export{N as default};
