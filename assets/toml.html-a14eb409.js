import{_ as p,W as o,X as l,Y as i,Z as n,$ as s,a0 as e,a1 as t,C as c}from"./framework-a4c02b8f.js";const u={},r=n("h1",{id:"toml",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#toml","aria-hidden":"true"},"#"),s(" TOML")],-1),d=n("figure",null,[n("img",{src:"https://public-1308755698.cos.ap-chongqing.myqcloud.com//img/202312021115471.png",alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),k=n("p",null,"为人类而生的配置文件格式",-1),m={href:"https://toml.io/cn/",target:"_blank",rel:"noopener noreferrer"},v=t("<p>主流的配置文件格式有很多，也有各自的缺点，<code>xml</code>，<code>json</code>，<code>yaml</code>，<code>ini</code>，<code>properties</code>等等，都有其各自适用的范围与领域，TOML比起其它的格式，风格上更像是ini的拓展，在基本类型方面而言更加简洁和实用，这是一个很大的优点，但是在嵌套类型上，例如嵌套表，嵌套表数组，为了在写法表现上更加简洁，相应的牺牲就是在语义上变得繁琐和不太容易理解。就作者个人而言认为，目前最主流和最适合的配置文件依旧是<code>yaml</code>，不过抱着学习的心态，对于TOML，未尝不可一试。</p>",1),b={href:"https://pkg.go.dev/search?q=toml",target:"_blank",rel:"noopener noreferrer"},g=t(`<h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍" aria-hidden="true">#</a> 介绍</h2><p>TOML是由Github创始人所构建的一种语言，这种语言专门为配置文件而生，旨在成为一个语义明显且易于阅读的最小化配置文件格式。TOML 被设计成可以无歧义地映射为哈希表。TOML 应该能很容易地被解析成各种语言中的数据结构。他们的目的就是<strong>简洁，简单，语义化</strong>，以及<strong>为人而生</strong>的配置文件格式。</p><p>TOML非常简单易学，类型丰富，总共支持以下类型：</p><ul><li>键/值对</li><li>数组</li><li>表</li><li>内联表</li><li>表数组</li><li>整数 &amp; 浮点数</li><li>字符串</li><li>布尔值</li><li>日期 &amp; 时刻，带可选的时区偏移</li></ul><p>并且TOML也已经受到了非常广泛的语言支持，其中就包括Go语言。</p><h2 id="示例" tabindex="-1"><a class="header-anchor" href="#示例" aria-hidden="true">#</a> 示例</h2><p>这是一个十分简单的TOML配置，即便没有了解过TOML也能看个大概，一些细节上的问题等阅读本节后就会全部消失了。</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token comment"># 这是一个 TOML 文档</span>

<span class="token key property">title</span> <span class="token punctuation">=</span> <span class="token string">&quot;TOML 示例&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">owner</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;Tom Preston-Werner&quot;</span>
<span class="token key property">dob</span> <span class="token punctuation">=</span> <span class="token date number">1979-05-27T07:32:00-08:00</span>

<span class="token punctuation">[</span><span class="token table class-name">database</span><span class="token punctuation">]</span>
<span class="token key property">enabled</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>
<span class="token key property">ports</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span> <span class="token number">8000</span><span class="token punctuation">,</span> <span class="token number">8001</span><span class="token punctuation">,</span> <span class="token number">8002</span> <span class="token punctuation">]</span>
<span class="token key property">data</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span> <span class="token punctuation">[</span><span class="token string">&quot;delta&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;phi&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3.14</span><span class="token punctuation">]</span> <span class="token punctuation">]</span>
<span class="token key property">temp_targets</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">cpu</span> <span class="token punctuation">=</span> <span class="token number">79.5</span><span class="token punctuation">,</span> <span class="token key property">case</span> <span class="token punctuation">=</span> <span class="token number">72.0</span> <span class="token punctuation">}</span>

<span class="token punctuation">[</span><span class="token table class-name">servers</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token table class-name">servers.alpha</span><span class="token punctuation">]</span>
<span class="token key property">ip</span> <span class="token punctuation">=</span> <span class="token string">&quot;10.0.0.1&quot;</span>
<span class="token key property">role</span> <span class="token punctuation">=</span> <span class="token string">&quot;前端&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">servers.beta</span><span class="token punctuation">]</span>
<span class="token key property">ip</span> <span class="token punctuation">=</span> <span class="token string">&quot;10.0.0.2&quot;</span>
<span class="token key property">role</span> <span class="token punctuation">=</span> <span class="token string">&quot;后端&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>TOML官方声称自己还在测试版本，不排除日后语法更改的可能性，但是很多团队已经将其纳入生产环境了，具体如何使用需要由各位自行决定。</p></div><h2 id="规范" tabindex="-1"><a class="header-anchor" href="#规范" aria-hidden="true">#</a> 规范</h2><p>TOML的规范特别少，总共就四条：</p><ul><li>TOML 是大小写敏感的 -- 命名时需要注意大小写</li><li>TOML 文件必须是合法的 UTF-8 编码的 Unicode 文档 -- 仅支持UTF-8编码</li><li>空白是指制表符（0x09）或空格（0x20）</li><li>换行是指 LF（0x0A）或 CRLF（0x0D 0x0A）</li></ul><h2 id="注释" tabindex="-1"><a class="header-anchor" href="#注释" aria-hidden="true">#</a> 注释</h2><p>TOML的注释与其他大多数配置语言类似，都是通过<code>#</code>来进行标注，允许全行注释与行尾注释。</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token comment"># 这是一个全行注释</span>
<span class="token key property">lang</span> <span class="token punctuation">=</span> <span class="token string">&quot;TOML&quot;</span>
<span class="token key property">os</span> <span class="token punctuation">=</span> <span class="token string">&quot;win10&quot;</span> <span class="token comment"># 这是一个行尾注释</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="键值对" tabindex="-1"><a class="header-anchor" href="#键值对" aria-hidden="true">#</a> 键值对</h2><p>TOML最基本的元素就是键值对，有以下几点需要注意：</p><ul><li>键名在等号的左边，值在右边</li><li>键名和键值周围的空白会被忽略</li><li>键名，等号，键值，必须在同一行 （有些值可以跨多行）</li><li>键值所允许的类型如下： <ul><li>字符串</li><li>整数</li><li>浮点数</li><li>布尔值</li><li>坐标日期时刻</li><li>各地日期时刻</li><li>各地日期</li><li>各地时刻</li><li>数组</li><li>内联表</li></ul></li></ul><p>示例</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">key</span> <span class="token punctuation">=</span> <span class="token string">&quot;val&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>一个键名必须对应一个键值，不允许空键的存在</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">key</span> <span class="token punctuation">=</span> <span class="token comment">#非法的空键</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>书写完一行键值对后必须立刻换行</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">lang</span> <span class="token punctuation">=</span> <span class="token string">&quot;TOML&quot;</span> os <span class="token punctuation">=</span> <span class="token string">&quot;win10&quot;</span> <span class="token comment"># 错误的写法</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="键名" tabindex="-1"><a class="header-anchor" href="#键名" aria-hidden="true">#</a> 键名</h2><p>键名分为<strong>裸键</strong>，<strong>引号键</strong>，大多数情况下推荐使用裸键。</p><p><strong>裸键</strong>只能包含ASCII字母，ASCII数字，下划线和短横线</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">key</span> <span class="token punctuation">=</span> <span class="token string">&quot;val&quot;</span>
<span class="token key property">second_key</span> <span class="token punctuation">=</span> <span class="token string">&quot;second_val&quot;</span>
<span class="token key property">thrid-key</span> <span class="token punctuation">=</span> <span class="token string">&quot;third-val&quot;</span>
<span class="token key property">1024</span> <span class="token punctuation">=</span> <span class="token string">&quot;1024&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>虽然裸键允许使用纯数字来作键名，但始终会将键名当作字符串来解析</p></div><p><strong>引号键</strong>的规则与字符串字面量的规则一致，提供对于键名更广泛的使用</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code>”url“ <span class="token punctuation">=</span> <span class="token string">&quot;toml.io&quot;</span> <span class="token comment"># 双引号</span>
<span class="token key property">&quot;blank str&quot;</span> <span class="token punctuation">=</span> <span class="token string">&quot;blank val&quot;</span> <span class="token comment"># 带空格</span>
<span class="token key property">&quot;项目名称&quot;</span> <span class="token punctuation">=</span> <span class="token string">&quot;TOML&quot;</span> <span class="token comment"># 中文键名，事实上只要是utf-8字符都可以</span>
<span class="token key property">&#39;key&#39;</span> <span class="token punctuation">=</span> <span class="token string">&quot;val&quot;</span> <span class="token comment"># 单引号键名</span>
<span class="token key property">&#39;second &quot;key&quot;&#39;</span> <span class="token punctuation">=</span> <span class="token string">&quot;second val&quot;</span> <span class="token comment"># 单引号内含有双引号</span>
<span class="token key property">&quot;&quot;</span><span class="token punctuation">=</span><span class="token string">&quot;&quot;</span> <span class="token comment"># 双引号空键</span>
<span class="token key property">&#39;&#39;</span><span class="token punctuation">=</span><span class="token string">&#39;&#39;</span> <span class="token comment"># 单引号空键</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>裸键是无论如何也不能是空键，但引号键允许空键，不过并不推荐这样做</p></div><p>通过<code>.</code>使键有了层级结构</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">lang</span> <span class="token punctuation">=</span> <span class="token string">&quot;TOML&quot;</span>
<span class="token key property">os</span> <span class="token punctuation">=</span> <span class="token string">&quot;win10&quot;</span>
<span class="token key property">os.cpu</span> <span class="token punctuation">=</span> <span class="token string">&quot;intel&quot;</span>
<span class="token key property">os.&quot;gpu&quot;</span> <span class="token punctuation">=</span> <span class="token string">&quot;nvidia&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h2><p>TOML中的字符串有四种：<strong>基本字符串</strong>、<strong>多行字符串</strong>、<strong>字面量</strong>、<strong>多行字面量</strong>，所有的字符串都只能包含合法的UTF8-8字符</p><p><strong>基本字符串</strong>由双引号<code>&quot;</code>包裹，几乎所有Unicode字符都可以使用，除了部分需要转义</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">strings</span> <span class="token punctuation">=</span> <span class="token string">&quot;这是一个字符串,\\&quot;这是双引号内部\\&quot;,长度\\t大小\\t&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下面是一些常见的转义方法</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>\\b         - backspace       (U+0008)
\\t         - tab             (U+0009)
\\n         - linefeed        (U+000A)
\\f         - form feed       (U+000C)
\\r         - carriage return (U+000D)
\\&quot;         - quote           (U+0022)
\\\\         - backslash       (U+005C)
\\uXXXX     - unicode         (U+XXXX)
\\UXXXXXXXX - unicode         (U+XXXXXXXX)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>任何 Unicode 字符都可以用 <code>\\uXXXX</code> 或 <code>\\UXXXXXXXX</code> 的形式来转义。所有上面未列出的其它转义序列都是保留的，如果用了，TOML 应当产生错误。</p></div><p><strong>多行基本字符串</strong>是由三个引号包裹，允许换行，紧随开头引号的换行会被自动去除</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">long_str</span> <span class="token punctuation">=</span> <span class="token string">&quot;&quot;&quot;
这是一个换行了的字符串
这是第二行&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解析的结果根据不同的平台会有不同</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>&quot;这是一个换行了的字符串\\n这是第二行&quot; # Unix
&quot;这是一个换行了的字符串\\r\\n这是第二行&quot; #Windows
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果只是单纯的想写多行，而不想引入换行符以及其他的空白符，可以在行末使用<code>\\</code>来消除空白</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">str</span> <span class="token punctuation">=</span> <span class="token string">&quot;今天天气很好，可以和朋友出去玩一玩，准备去海边游泳&quot;</span>

<span class="token comment">#等价于</span>
<span class="token key property">str1</span> <span class="token punctuation">=</span> <span class="token string">&quot;&quot;&quot;
今天天气很好，\\
可以和朋友出去玩一玩，\\
准备去海边游泳
&quot;&quot;&quot;</span>

<span class="token comment">#等价于</span>
<span class="token key property">str2</span> <span class="token punctuation">=</span> str1 <span class="token punctuation">=</span> <span class="token string">&quot;&quot;&quot;
今天天气很好，\\

可以和朋友出去玩一玩，\\

准备去海边游泳
&quot;&quot;&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当一行的最后一个非空白字符串是违背转义的<code>\\</code>时，它会将包括自己在内的所有空白字符一齐清除，直到遇见下一个非空白字符或者结束引号为止</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>也可以在多行基本字符串内的写入一个或两个相连的<code>&quot;</code>，同样可以写在开头和结尾</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">str</span> <span class="token punctuation">=</span> <span class="token string">&quot;&quot;&quot;&quot;我很高兴遇见你&quot;&quot;&quot;</span><span class="token string">&quot; # &quot;</span>我很高兴遇见你”
<span class="token key property">str2</span> <span class="token punctuation">=</span> <span class="token string">&quot;&quot;&quot;  这是一个多行基本字符串示例:&quot; \\&quot;&quot;&quot; &quot;我很高兴遇见你&quot; \\&quot;&quot;&quot; &quot; &quot;&quot;&quot;</span> <span class="token comment"># 这是一个多行基本字符串示例:&quot; &quot;&quot;&quot; &quot;我很高兴遇见你&quot; &quot;&quot;&quot; &quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></div><p><strong>字面量字符串</strong>由单引号包裹，完全不允许转义，多用于书写文件路径，正则表达式等特殊的规则</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">regx</span> <span class="token punctuation">=</span> <span class="token string">&#39;&lt;&lt;\\i\\c*\\s*&gt;&gt;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>多行字面量</strong>由<code>&#39;&#39;&#39;</code>包裹，同样不允许转义，由于没有转义，书写连续三个<code>&#39;</code>将会解析错误</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">lines</span> <span class="token punctuation">=</span> <span class="token string">&#39;&#39;&#39; don&#39;t you think trump is chinese &#39;&#39;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="整数" tabindex="-1"><a class="header-anchor" href="#整数" aria-hidden="true">#</a> 整数</h2><p>整数是纯数字，可以有<code>+</code>，<code>-</code> 符号前缀</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">num</span> <span class="token punctuation">=</span> <span class="token number">+1</span>
<span class="token key property">n_num</span> <span class="token punctuation">=</span> <span class="token number">-1</span>
<span class="token key property">zero</span> <span class="token punctuation">=</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于一些很长的数字，可以用下划线<code>_</code>来分割以增强可读性，下面以中国人的数字阅读习惯举个例子</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">big_num0</span> <span class="token punctuation">=</span> <span class="token number">1_0000_0000</span> <span class="token comment"># 一亿</span>
<span class="token key property">big_num1</span> <span class="token punctuation">=</span> <span class="token number">100_0000</span> <span class="token comment"># 一百万</span>
<span class="token key property">big_num2</span> <span class="token punctuation">=</span> <span class="token number">996_1024</span> <span class="token comment"># 九百九十六万零一千零二十四</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其它进制</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">hex</span> <span class="token punctuation">=</span> <span class="token number">0xABCD</span>
<span class="token key property">octal</span> <span class="token punctuation">=</span> <span class="token number">0o755</span>
<span class="token key property">binary</span> <span class="token punctuation">=</span> <span class="token number">0b1001</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>TOML所允许的整数范围是<code>-2^63 - 2^63-1</code></p></div><h2 id="浮点数" tabindex="-1"><a class="header-anchor" href="#浮点数" aria-hidden="true">#</a> 浮点数</h2><p>浮点数应当被实现为 IEEE 754 binary64 值</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token comment"># 小数</span>
<span class="token key property">float1</span> <span class="token punctuation">=</span> <span class="token number">+1.024</span>
<span class="token key property">float2</span> <span class="token punctuation">=</span> <span class="token number">-2.048</span>
<span class="token key property">float3</span> <span class="token punctuation">=</span> <span class="token number">9.66</span>

<span class="token comment"># 指数</span>
<span class="token key property">float4</span> <span class="token punctuation">=</span> <span class="token number">2e+11</span>
<span class="token key property">float5</span> <span class="token punctuation">=</span> <span class="token number">1e6</span>
<span class="token key property">float6</span> <span class="token punctuation">=</span> <span class="token number">-2E-2</span>

<span class="token comment">#都有</span>
<span class="token key property">float7</span> <span class="token punctuation">=</span> <span class="token number">1.024e-15</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>小数点前后必须紧邻一个数字</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token comment"># 非法的浮点数</span>
<span class="token key property">invalid_float_1</span> <span class="token punctuation">=</span> <span class="token punctuation">.</span><span class="token number">7</span>
<span class="token key property">invalid_float_2</span> <span class="token punctuation">=</span> <span class="token number">7</span><span class="token punctuation">.</span>
<span class="token key property">invalid_float_3</span> <span class="token punctuation">=</span> <span class="token number">3</span><span class="token punctuation">.</span>e<span class="token number">+20</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可以使用<code>_</code>来增强可读性</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">float8</span> <span class="token punctuation">=</span> <span class="token number">224_617.445_991_228</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>特殊浮点值也能够表示，它们是小写的</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token comment"># 无穷</span>
<span class="token key property">sf1</span> <span class="token punctuation">=</span> <span class="token number">inf</span>  <span class="token comment"># 正无穷</span>
<span class="token key property">sf2</span> <span class="token punctuation">=</span> <span class="token number">+inf</span> <span class="token comment"># 正无穷</span>
<span class="token key property">sf3</span> <span class="token punctuation">=</span> <span class="token number">-inf</span> <span class="token comment"># 负无穷</span>

<span class="token comment"># 非数</span>
<span class="token key property">sf4</span> <span class="token punctuation">=</span> <span class="token number">nan</span>  <span class="token comment"># 实际上对应信号非数码还是静默非数码，取决于实现</span>
<span class="token key property">sf5</span> <span class="token punctuation">=</span> <span class="token number">+nan</span> <span class="token comment"># 等同于 \`nan\`</span>
<span class="token key property">sf6</span> <span class="token punctuation">=</span> <span class="token number">-nan</span> <span class="token comment"># 有效，实际码取决于实现</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="布尔值" tabindex="-1"><a class="header-anchor" href="#布尔值" aria-hidden="true">#</a> 布尔值</h2><p>布尔值只有两种表达，真-<code>true</code>，假-<code>false</code></p><h2 id="时区日期时刻" tabindex="-1"><a class="header-anchor" href="#时区日期时刻" aria-hidden="true">#</a> 时区日期时刻</h2>`,73),y={href:"https://rfc-editor.org/rfc/rfc3339",target:"_blank",rel:"noopener noreferrer"},q=t(`<div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">odt1</span> <span class="token punctuation">=</span> <span class="token date number">1979-05-27T07:32:00Z</span>
<span class="token key property">odt2</span> <span class="token punctuation">=</span> <span class="token date number">1979-05-27T00:32:00-07:00</span>
<span class="token key property">odt3</span> <span class="token punctuation">=</span> <span class="token date number">1979-05-27T00:32:00.999999-07:00</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>规范也允许使用空格替换字母T</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">odt4</span> <span class="token punctuation">=</span> <span class="token date number">1979-05-27 07:32:00Z</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="本地日期时刻" tabindex="-1"><a class="header-anchor" href="#本地日期时刻" aria-hidden="true">#</a> 本地日期时刻</h2><p>RFC3339格式的日期时刻省略了日期偏移量，这表示该日期时刻的使用并不涉及时区偏移。在没有其它信息的情况下，并不知道它究竟该被转换成世上的哪一刻，如果仍被要求转换，那结果将取决于实现。</p><p>日期</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">date</span> <span class="token punctuation">=</span> <span class="token date number">2020-02-05</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>时刻</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">time</span> <span class="token punctuation">=</span> <span class="token date number">08:32:12.10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>日期时刻</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">ldt1</span> <span class="token punctuation">=</span> <span class="token date number">1979-05-27T07:32:00</span>
<span class="token key property">ldt2</span> <span class="token punctuation">=</span> <span class="token date number">1979-05-27 07:32:00</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>日期时刻的值如果超出的所实现的精度，多余的部分将会被舍弃</p></div><h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h2><p>数组是由方括号<code>[]</code>包裹，子元素由逗号分隔<code>,</code>，可以混和不同类型的值。</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">ints</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">]</span>
<span class="token key property">floats</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token number">2.2</span><span class="token punctuation">,</span> <span class="token number">3.3</span><span class="token punctuation">]</span>
<span class="token key property">nums</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2.2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4.4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token key property">arr</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>数组内部可以换行，也可以被注释</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token comment"># fib数列</span>
<span class="token key property">fibs</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>
    <span class="token number">0</span><span class="token punctuation">,</span> <span class="token comment"># 0</span>
    <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment"># 1</span>
    <span class="token number">1</span><span class="token punctuation">,</span> <span class="token comment"># 2</span>
    <span class="token number">2</span><span class="token punctuation">,</span> <span class="token comment"># 3</span>
    <span class="token number">3</span><span class="token punctuation">,</span> <span class="token comment"># 4</span>
    <span class="token number">5</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在这之前的所有内容作者都觉得是TOML的优点，而往后的内容，就是TOML所诟病的点了。</p><h2 id="表" tabindex="-1"><a class="header-anchor" href="#表" aria-hidden="true">#</a> 表</h2><p>又称为哈希映射表或字典，是键值对的集合。</p><p><strong>表头</strong>由方括号定义<code>[]</code>，只作为单独的行出现，其规则与键名一致</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">table</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token table class-name">a.b.c</span><span class="token punctuation">]</span>            <span class="token comment"># 这是最佳实践</span>
<span class="token punctuation">[</span> <span class="token table class-name">d.e.f</span> <span class="token punctuation">]</span>          <span class="token comment"># 等同于 [d.e.f]</span>
<span class="token punctuation">[</span> <span class="token table class-name">g .  h  . i</span> <span class="token punctuation">]</span>    <span class="token comment"># 等同于 [g.h.i]</span>
<span class="token punctuation">[</span> <span class="token table class-name">j . &quot;ʞ&quot; . &#39;l&#39;</span> <span class="token punctuation">]</span>  <span class="token comment"># 等同于 [j.&quot;ʞ&quot;.&#39;l&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在定义表头时，可以直接定义子表，而无需先定义父表</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">creature.human.female</span><span class="token punctuation">]</span> <span class="token comment"># 不需要先定义[creature]和[creature.human]这两个表头</span>

<span class="token punctuation">[</span><span class="token table class-name">creature</span><span class="token punctuation">]</span> <span class="token comment"># 父表方在子表后定义同样是允许的</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其下方直到文件结束或者下一个表头为止，都是这个表头的键值对，且并不保证键值对的顺序。</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">table-1</span><span class="token punctuation">]</span>
<span class="token key property">key1</span> <span class="token punctuation">=</span> <span class="token string">&quot;some string&quot;</span>
<span class="token key property">key2</span> <span class="token punctuation">=</span> <span class="token number">123</span>

<span class="token punctuation">[</span><span class="token table class-name">table-2</span><span class="token punctuation">]</span>
<span class="token key property">key1</span> <span class="token punctuation">=</span> <span class="token string">&quot;another string&quot;</span>
<span class="token key property">key2</span> <span class="token punctuation">=</span> <span class="token number">456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>顶层表，又被称为根表，于文档开始处开始并在第一个表头（或文件结束处）前结束，不同于其它表，它没有名字且无法后置。</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token comment"># 顶层表开始。</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;Fido&quot;</span>
<span class="token key property">breed</span> <span class="token punctuation">=</span> <span class="token string">&quot;pug&quot;</span>

<span class="token comment"># 顶层表结束。</span>
<span class="token punctuation">[</span><span class="token table class-name">owner</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;Regina Dogman&quot;</span>
<span class="token key property">member_since</span> <span class="token punctuation">=</span> <span class="token date number">1999-08-04</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>点分隔键为最后一个键名前的每个键名创建并定义一个表，倘若这些表尚未被创建的话。</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">fruit.apple.color</span> <span class="token punctuation">=</span> <span class="token string">&quot;red&quot;</span>
<span class="token comment"># 定义一个名为 fruit 的表</span>
<span class="token comment"># 定义一个名为 fruit.apple 的表</span>

<span class="token key property">fruit.apple.taste.sweet</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>
<span class="token comment"># 定义一个名为 fruit.apple.taste 的表</span>
<span class="token comment"># fruit 和 fruit.apple 已经创建过了</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说实话TOML在表名重定义这块做的有点繁杂，按照作者的理解是：如果一个表已经被方括号表头形式定义过一次了，那么不能再以方括号形式定义同样的表，且使用点分隔键来再次定义这个表也是不被允许的。倘若一个表是通过点分隔符定义的，那么可以通过方括号表头的形式定义其子表。刚开始看这一坨，确实有点绕。</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">creature</span><span class="token punctuation">]</span>
<span class="token key property">human.genderCount</span> <span class="token punctuation">=</span> <span class="token number">2</span>

<span class="token comment"># [creature] 非法</span>
<span class="token comment"># [creature.human] 非法</span>

<span class="token punctuation">[</span><span class="token table class-name">creature.human.female</span><span class="token punctuation">]</span> <span class="token comment">#添加子表</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;trump&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="内联表" tabindex="-1"><a class="header-anchor" href="#内联表" aria-hidden="true">#</a> 内联表</h2><p>内联表提供了一种更为紧凑的语法来表示表，它们对于分组数据特别有用，否则这些数据很快就会变得冗长，内联表被完整地定义在花括号之中：<code>{</code> 和 <code>}</code>。 括号中，可以出现零或更多个以逗号分隔的键值对，键值对采取与标准表中的键值对相同的形式，什么类型的值都可以，包括内联表。</p><p><strong>规范</strong></p><ul><li>内联表得出现在同一行内</li><li>内联表中，最后一对键值对后不允许终逗号（也称为尾逗号）</li><li>不允许花括号中出现任何换行，除非在值中它们合法</li><li>即便如此，也强烈不建议把一个内联表搞成纵跨多行的样子，如果你发现自己真的需要，那意味着你应该使用标准表</li></ul><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">first</span> <span class="token punctuation">=</span> <span class="token string">&quot;Tom&quot;</span><span class="token punctuation">,</span> <span class="token key property">last</span> <span class="token punctuation">=</span> <span class="token string">&quot;Preston-Werner&quot;</span> <span class="token punctuation">}</span>
<span class="token key property">point</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">x</span> <span class="token punctuation">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token key property">y</span> <span class="token punctuation">=</span> <span class="token number">2</span> <span class="token punctuation">}</span>
<span class="token key property">animal</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">type.name</span> <span class="token punctuation">=</span> <span class="token string">&quot;pug&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述内联表等同于下面的标准表定义：</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">name</span><span class="token punctuation">]</span>
<span class="token key property">first</span> <span class="token punctuation">=</span> <span class="token string">&quot;Tom&quot;</span>
<span class="token key property">last</span> <span class="token punctuation">=</span> <span class="token string">&quot;Preston-Werner&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">point</span><span class="token punctuation">]</span>
<span class="token key property">x</span> <span class="token punctuation">=</span> <span class="token number">1</span>
<span class="token key property">y</span> <span class="token punctuation">=</span> <span class="token number">2</span>

<span class="token punctuation">[</span><span class="token table class-name">animal</span><span class="token punctuation">]</span>
<span class="token key property">type.name</span> <span class="token punctuation">=</span> <span class="token string">&quot;pug&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>内联表是完全独立的，在内部定义全部的键与子表，且不能在括号以外的地方，再添加键与子表。</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">product</span><span class="token punctuation">]</span>
<span class="token key property">type</span> <span class="token punctuation">=</span> <span class="token punctuation">{</span> <span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;Nail&quot;</span> <span class="token punctuation">}</span>
<span class="token comment"># type.edible = false  # 非法</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样的，内联表不能被用于向一个已定义的表添加键或子表。</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token table class-name">product</span><span class="token punctuation">]</span>
<span class="token key property">type.name</span> <span class="token punctuation">=</span> <span class="token string">&quot;Nail&quot;</span>
<span class="token comment"># type = { edible = false }  # 非法</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="表数组" tabindex="-1"><a class="header-anchor" href="#表数组" aria-hidden="true">#</a> 表数组</h2><p>可以把表头写在方括号里，表示是一个表数组，按照其出现顺序插入数组。</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">products</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;Hammer&quot;</span>
<span class="token key property">sku</span> <span class="token punctuation">=</span> <span class="token number">738594937</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">products</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 数组里的空表</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">products</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;Nail&quot;</span>
<span class="token key property">sku</span> <span class="token punctuation">=</span> <span class="token number">284758393</span>

<span class="token key property">color</span> <span class="token punctuation">=</span> <span class="token string">&quot;gray&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>等价于 JSON 的如下结构。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;products&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Hammer&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;sku&quot;</span><span class="token operator">:</span> <span class="token number">738594937</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Nail&quot;</span><span class="token punctuation">,</span> <span class="token property">&quot;sku&quot;</span><span class="token operator">:</span> <span class="token number">284758393</span><span class="token punctuation">,</span> <span class="token property">&quot;color&quot;</span><span class="token operator">:</span> <span class="token string">&quot;gray&quot;</span> <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>任何对表数组的引用，都指向数组里上一个的表元素，允许在表数组内创建子表和子表数组。</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">fruits</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;apple&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">fruits.physical</span><span class="token punctuation">]</span>  <span class="token comment"># 子表</span>
<span class="token key property">color</span> <span class="token punctuation">=</span> <span class="token string">&quot;red&quot;</span>
<span class="token key property">shape</span> <span class="token punctuation">=</span> <span class="token string">&quot;round&quot;</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">fruits.varieties</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 嵌套表数组</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;red delicious&quot;</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">fruits.varieties</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;granny smith&quot;</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">fruits</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;banana&quot;</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">fruits.varieties</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;plantain&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述 TOML 等价于 JSON 的如下结构。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;fruits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;apple&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;physical&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;color&quot;</span><span class="token operator">:</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;shape&quot;</span><span class="token operator">:</span> <span class="token string">&quot;round&quot;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;varieties&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;red delicious&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span> <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;granny smith&quot;</span> <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;banana&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;varieties&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span> <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;plantain&quot;</span> <span class="token punctuation">}</span>
      <span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>表数组和子表的定义顺序不能颠倒</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token comment"># 非法的 TOML 文档</span>
<span class="token punctuation">[</span><span class="token table class-name">fruit.physical</span><span class="token punctuation">]</span>  <span class="token comment"># 子表，但它应该隶属于哪个父元素？</span>
<span class="token key property">color</span> <span class="token punctuation">=</span> <span class="token string">&quot;red&quot;</span>
<span class="token key property">shape</span> <span class="token punctuation">=</span> <span class="token string">&quot;round&quot;</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">fruit</span><span class="token punctuation">]</span><span class="token punctuation">]</span>  <span class="token comment"># 解析器必须在发现“fruit”是数组而非表时抛出错误</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;apple&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>试图向一个静态定义的数组追加内容，即便数组尚且为空，也会在解析时报错。</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token comment"># 非法的 TOML 文档</span>
<span class="token key property">fruits</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">fruits</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment"># 不允许</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若试图用已经确定为数组的名称定义表，会在解析时报错。将数组重定义为普通表的行为，也会在解析时报错。</p><div class="language-toml line-numbers-mode" data-ext="toml"><pre class="language-toml"><code><span class="token comment"># 非法的 TOML 文档</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">fruits</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;apple&quot;</span>

<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">fruits.varieties</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;red delicious&quot;</span>

<span class="token comment"># 非法：该表与之前的表数组相冲突</span>
<span class="token punctuation">[</span><span class="token table class-name">fruits.varieties</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">&quot;granny smith&quot;</span>

<span class="token punctuation">[</span><span class="token table class-name">fruits.physical</span><span class="token punctuation">]</span>
<span class="token key property">color</span> <span class="token punctuation">=</span> <span class="token string">&quot;red&quot;</span>
<span class="token key property">shape</span> <span class="token punctuation">=</span> <span class="token string">&quot;round&quot;</span>

<span class="token comment"># 非法：该表数组与之前的表相冲突</span>
<span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token table class-name">fruits.physical</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
<span class="token key property">color</span> <span class="token punctuation">=</span> <span class="token string">&quot;green&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拓展名" tabindex="-1"><a class="header-anchor" href="#拓展名" aria-hidden="true">#</a> 拓展名</h2><p>TOML配置文件的拓展名均以<code>.toml</code>为准</p><h2 id="mime类型" tabindex="-1"><a class="header-anchor" href="#mime类型" aria-hidden="true">#</a> MIME类型</h2><p>在互联网上传输 TOML 文件时，恰当的 MIME 类型是 <code>application/toml</code></p>`,62);function h(f,x){const a=c("ExternalLinkIcon");return o(),l("div",null,[r,d,k,i(" more "),n("p",null,[s("官方文档："),n("a",m,[s("TOML：Tom 的（语义）明显、（配置）最小化的语言"),e(a)])]),v,n("p",null,[s("Go中对于TOML支持的依赖："),n("a",b,[s("toml - Search Results - Go Packages"),e(a)])]),g,n("p",null,[n("a",y,[s("RFC 3339"),e(a)]),s("格式的日期格式，需要指定特定的时区偏移量，如下所示")]),q])}const T=p(u,[["render",h],["__file","toml.html.vue"]]);export{T as default};
